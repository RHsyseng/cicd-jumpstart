name: Container Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Build the Container Image
      working-directory: ./go-code/
      run: docker build . --file ./Dockerfile --tag quay.io/mavazque/reversewords:${GITHUB_SHA}

    - name: Save the Container Image
      run: docker save -o /tmp/reverse.tar quay.io/mavazque/reversewords:${GITHUB_SHA}

    - name: Save container as Artifact
      uses: actions/upload-artifact@v1
      with:
        name: reverse-image
        path: /tmp/reverse.tar

  deploy:
    name: Deploy Kind cluster and run tests
    needs: [ build ]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: Install the Kubectl binary
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install ./kubectl /usr/local/bin/
        kubectl version --short --client
    
    - name: Install the Kind binary
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.8.1/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind
        kind version
        
    - name: Create a Kind Cluster
      run: kind create cluster

    - name: Deploy Router CRD
      run: kubectl apply -f https://raw.githubusercontent.com/konveyor/gitops-primer/main/hack/router-crd.yaml

    - name: Pull the Container Image from Artifacts
      uses: actions/download-artifact@v1
      with:
        name: reverse-image
        path: /tmp

    - name: Load the Container Image
      run: docker load -i /tmp/reverse.tar

    - name: Load the Container Image into Kind
      run: kind load docker-image quay.io/mavazque/reversewords:${GITHUB_SHA}

    - name: Create a Deployment with the new Container Image
      working-directory: ./kube-objects/
      run: |
        sed -i "s|\(.*image:.*:\).*|\1${GITHUB_SHA}|" deployment.yaml
        kubectl apply -f deployment.yaml

    - name: Verify Deployment has 1 ready replica
      run: kubectl get deployment -n default -o jsonpath='{.status.readyReplicas}'

  push-image:
    name: Push Container Image to Quay Registry
    needs: [ build, deploy ]
    if: >
      (github.event_name == 'push' || github.event_name == 'schedule') &&
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-20.04
    steps:
      - name: Login to Quay Registry
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Pull Container Image from Artifacts
        uses: actions/download-artifact@v1
        with:
          name: reverse-image
          path: /tmp

      - name: Load the Container Image
        run: docker load -i /tmp/reverse.tar

      - name: Push the Container Image
        run: docker push quay.io/mavazque/reversewords:${GITHUB_SHA}

  patch-deployment-file:
    name: Patch Deployment file in the repo
    needs: [ build, deploy, push-image ]
    runs-on: ubuntu-20.04
    if: >
      (github.event_name == 'push' || github.event_name == 'schedule') &&
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    steps:
       - uses: actions/checkout@v2

       - name: Patch the Deployment file
         working-directory: ./kube-objects/
         run: |
           sed -i "s|\(.*image:.*:\).*|\1${GITHUB_SHA}|" deployment.yaml

       - name: Commit and Push changes
         working-directory: ./kube-objects/
         run: |
             git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
             git config --local user.name "github-actions[bot]"
             git commit -m "Updated deployment file" -a
             git push -f
